#version 430 core

layout (local_size_x = 20, local_size_y = 20, local_size_z = 1) in;

// ----------------------------------------------------------------------------
//
// uniforms
//
// ----------------------------------------------------------------------------

layout(rgba32f, binding = 0) uniform image2D imgOutput;
	
layout(binding=1) uniform sampler2D texture1;

layout(std430, binding=2) buffer hist {
    uint elements[];
};

void main() {
    vec4 value = vec4(0.0, 0.0, 0.0, 1.0);
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	
    value.x = float(texelCoord.x)/(gl_NumWorkGroups.x * gl_WorkGroupSize.y);
    value.y = float(texelCoord.y)/(gl_NumWorkGroups.y * gl_WorkGroupSize.x);
    vec3 texCol = texture(texture1, value.xy).rgb;      
    vec4 col = vec4(texCol, 1.0);
	
    imageStore(imgOutput, texelCoord, col);

    uint rk = int(((texCol.x + texCol.y + texCol.z)/3) * 255);
    barrier();
    //atomicExchange(elements[rk],atomicAdd(elements[rk], 1));
    elements[rk]++;

}